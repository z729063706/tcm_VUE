{"remainingRequest":"/Users/zhaoyunhao/Code/html/tcm_VUE/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/zhaoyunhao/Code/html/tcm_VUE/src/components/admin/publish.vue?vue&type=style&index=0&id=0a8922ef&scoped=true&lang=css&","dependencies":[{"path":"/Users/zhaoyunhao/Code/html/tcm_VUE/src/components/admin/publish.vue","mtime":1658995651025},{"path":"/Users/zhaoyunhao/Code/html/tcm_VUE/node_modules/css-loader/dist/cjs.js","mtime":1658995718131},{"path":"/Users/zhaoyunhao/Code/html/tcm_VUE/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1658995718357},{"path":"/Users/zhaoyunhao/Code/html/tcm_VUE/node_modules/postcss-loader/src/index.js","mtime":1658995718197},{"path":"/Users/zhaoyunhao/Code/html/tcm_VUE/node_modules/cache-loader/dist/cjs.js","mtime":1658995717985},{"path":"/Users/zhaoyunhao/Code/html/tcm_VUE/node_modules/vue-loader/lib/index.js","mtime":1658995718269}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucmlnaHQgewogIGZsb2F0OiByaWdodDsKICBwYWRkaW5nOiAxMHB4OwogIG1hcmdpbi1yaWdodDogMTBweDsKfQo="},{"version":3,"sources":["publish.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;AACA;AACA","file":"publish.vue","sourceRoot":"src/components/admin","sourcesContent":["<template>\n  <div class>\n    <el-breadcrumb separator-class=\"el-icon-arrow-right\">\n      <el-breadcrumb-item :to=\"{ path: '/' }\">首页</el-breadcrumb-item>\n      <el-breadcrumb-item :to=\"{ path: '/admin/publish' }\">发布</el-breadcrumb-item>\n      <el-button size=\"mini\" type=\"success\" class=\"right\" icon=\"el-icon-check\" :disabled=\"publishing\" @click=\"publish\">立即发布</el-button>\n    </el-breadcrumb>\n    <div style=\"margin:10px\"></div>\n    <el-row>\n      <el-col :span=\"20\">\n        <el-input v-model=\"news.title\" placeholder=\"新闻标题\"></el-input>\n      </el-col>\n      <el-col :span=\"4\">\n        <el-select v-model=\"news.type\" popper-class=\"selector\">\n          <el-option value=\"1\" label=\"教学教务\">教学教务</el-option>\n          <el-option value=\"2\" label=\"通知公告\">通知公告</el-option>\n          <el-option value=\"3\" label=\"战果捷报\">战果捷报</el-option>\n        </el-select>\n      </el-col>\n      <el-col>\n        <el-input v-model=\"news.mainpic\" placeholder=\"主图外链地址\"></el-input>\n      </el-col>\n    </el-row>\n\n    <wangeditor :catchData=\"catchData\" />\n  </div>\n</template>\n\n<script>\nimport newsTypeAdapter from \"../../tool/newsTypeAdapterToEng.js\";\nimport global from \"../../global.js\"\nimport wangeditor from \"../tool/wangeditor\";\nexport default {\n  components: {\n    wangeditor\n  },\n  data() {\n    return {\n      //newsContent:\"\",\n      news: {\n        title: \"\",\n        content: \"无内容\",\n        type: \"1\",\n        mainpic:\"\"\n      },\n      publishing:false\n    };\n  },\n\n  computed: {},\n  watch: {},\n  methods: {\n    catchData(newsContent) {\n      this.news.content = newsContent;\n    },\n    publish() {\n      if (this.news.title==\"\"||this.news.mianpic==\"\"){\n        this.$message({\n              type: \"error\",\n              message: \"请填写标题和主图链接!\"\n            });\n        return;\n      }\n      let obj = {\n        uname:global.user.uname,\n        upass:global.user.upass,\n        title: this.news.title,\n        content: this.news.content,\n        type:this.news.type,\n        auther: global.user.name,\n        mainpic:this.news.mainpic\n      }\n      //console.log(obj);\n      this.publishing = true;\n      this.axios\n        .post(\"api/newsadd\", obj)\n        .then(res => {\n          if (res.data>0) {\n            this.publishing=false;\n            this.$confirm(\"发布成功，立刻去看这条新闻\", \"提示\", {\n              confirmButtonText: \"确定\",\n              cancelButtonText: \"取消\",\n              type: \"warning\"\n            })\n              .then(() => {\n                //console.log(res.data);\n\n                  this.$router.push({\n                  path:'/readNews/'+res.data,\n                })\n              })\n              .catch(() => {\n                  this.$router.push({\n                  path:'/admin/manage',\n                })\n              });\n          }\n        })\n        .catch(err => {\n          this.publishing=false;\n          window.console.log(err);\n        });\n    }\n  },\n  // 生命周期 - 创建完成（可以访问当前this实例）\n  created() {},\n  // 生命周期 - 挂载完成（可以访问DOM元素）\n  mounted() {\n    \n  },\n  // 生命周期 - 创建之前\n  beforeCreate() {},\n  // 生命周期 - 挂载之前\n  beforeMount() {},\n  // 生命周期 - 更新之前\n  beforeUpdate() {},\n  // 生命周期 - 更新之后\n  updated() {},\n  // 生命周期 - 销毁之前\n  beforeDestroy() {},\n  // 生命周期 - 销毁完成\n  destroyed() {}\n};\n</script>\n<style scoped>\n.right {\n  float: right;\n  padding: 10px;\n  margin-right: 10px;\n}\n</style>\n"]}]}